
-- Import Utility Scripts
import("cardinal.scar")							-- Contains sfx references, UI templates, and Civ/Age helper functions
import("ScarUtil.scar")							-- Contains game helper functions

-- Import Gameplay Systems
import("gameplay/score.scar")					-- Tracks player score
import("gameplay/diplomacy.scar")				-- Manages Tribute

-- preserve all standard ways to win
import("winconditions/annihilation.scar")   -- military conquest by eliminating all enemies
import("winconditions/elimination.scar")    -- handles player drops/disconnect
import("winconditions/surrender.scar")      -- surrender via UI



-- Import UI Support
import("gameplay/chi/current_dynasty_ui.scar")	-- Displays Chinese Dynasty UI
import("gameplay/event_cues.scar")
import("gameplay/currentageui.scar")


-- import("modifiers.scar")
-- Import cheat support
import("gameplay/cheat.scar") 

Core_RegisterModule("RND")

listOfAllWeapons = { "animal_attack_dangerous", "animal_attack_dangerous_charge", "animal_attack_huntable", "animal_attack_huntable_charge", "weapon_abbey_king_axe_eng", "weapon_abbey_king_charge_eng", "weapon_acre_barrage_dot_abb", "weapon_archer_2", "weapon_archer_2_eng", "weapon_archer_2_hre_ha_01", "weapon_archer_2_improved_abb", "weapon_archer_2_incendiary_improved_abb", "weapon_archer_2_jeanne_fre_ha_01", "weapon_archer_2_jpn", "weapon_archer_2_melee", "weapon_archer_2_melee_rus", "weapon_archer_2_mon", "weapon_archer_2_nrm", "weapon_archer_2_rus", "weapon_archer_3", "weapon_archer_3_eng", "weapon_archer_3_hre_ha_01", "weapon_archer_3_improved_abb", "weapon_archer_3_incendiary_improved_abb", "weapon_archer_3_jpn", "weapon_archer_3_melee", "weapon_archer_3_melee_nov", "weapon_archer_3_melee_rus", "weapon_archer_3_mon", "weapon_archer_3_nov", "weapon_archer_3_nrm", "weapon_archer_3_rus", "weapon_archer_4", "weapon_archer_4_eng", "weapon_archer_4_hre_ha_01", "weapon_archer_4_improved_abb", "weapon_archer_4_incendiary_improved_abb", "weapon_archer_4_jeanne_fre_ha_01", "weapon_archer_4_jpn", "weapon_archer_4_melee", "weapon_archer_4_melee_rus", "weapon_archer_4_mon", "weapon_archer_4_nrm", "weapon_archer_4_ranged_jeanne_projectile_arrow_fre_ha_01", "weapon_archer_4_rus", "weapon_archer_incendiary", "weapon_archer_incendiary__building_fire_improved_abb", "weapon_archer_incendiary_2_jeanne_fre_ha_01", "weapon_archer_incendiary_2_jpn", "weapon_archer_incendiary_3", "weapon_archer_incendiary_3_hre_ha_01", "weapon_archer_incendiary_3_jpn", "weapon_archer_incendiary_4", "weapon_archer_incendiary_4_hre_ha_01", "weapon_archer_incendiary_4_jeanne_fre_ha_01", "weapon_archer_incendiary_4_jpn", "weapon_archer_incendiary_building_fire", "weapon_archer_incendiary_building_fire_hre_ha_01", "weapon_archer_incendiary_building_fire_jpn", "weapon_archer_incendiary_camp_2_eng", "weapon_archer_incendiary_camp_2_nrm", "weapon_archer_incendiary_camp_3_eng", "weapon_archer_incendiary_camp_3_nrm", "weapon_archer_incendiary_camp_4_eng", "weapon_archer_incendiary_camp_4_nrm", "weapon_archer_incendiary_camp_eng", "weapon_archer_incendiary_camp_nrm", "weapon_archer_incendiary_hre_ha_01", "weapon_archer_incendiary_mon", "weapon_archer_incendiary_no_burn_mon", "weapon_archer_incendiary_rus", "weapon_archer_poisoned_2_mal", "weapon_archer_poisoned_3_mal", "weapon_archer_poisoned_4_mal", "weapon_archer_ram_tower_abb_ha_1", "weapon_archer_ram_tower_cru", "weapon_archer_ram_tower_incendiary_abb_ha_1", "weapon_archer_spear_4_eng", "weapon_archer_spear_4_nrm", "weapon_baldwin_cmp_tem", "weapon_banner_cavalry_2_charge_jpn", "weapon_banner_cavalry_2_jpn", "weapon_banner_cavalry_3_charge_jpn", "weapon_banner_cavalry_3_jpn", "weapon_banner_cavalry_4_charge_jpn", "weapon_banner_cavalry_4_jpn", "weapon_banner_ranged_2_jpn", "weapon_banner_ranged_3_jpn", "weapon_banner_ranged_4_jpn", "weapon_banner_ranged_incendiary_2_jpn", "weapon_banner_ranged_incendiary_3_jpn", "weapon_banner_ranged_incendiary_4_jpn", "weapon_banner_ranged_incendiary_building_fire_jpn", "weapon_banner_samurai_2_charge_jpn", "weapon_banner_samurai_2_jpn", "weapon_banner_samurai_3_charge_jpn", "weapon_banner_samurai_3_jpn", "weapon_banner_samurai_4_charge_jpn", "weapon_banner_samurai_4_jpn", "weapon_barbican_handcannon_chi", "weapon_barrage_initial_explosive", "weapon_bill_1_base_lan", "weapon_bill_1_brace_lan", "weapon_bill_1_charge_lan", "weapon_bill_2_base_lan", "weapon_bill_2_brace_lan", "weapon_bill_2_charge_lan", "weapon_bill_3_base_lan", "weapon_bill_3_brace_lan", "weapon_bill_3_charge_lan", "weapon_bill_4_base_lan", "weapon_bill_4_brace_lan", "weapon_bill_4_charge_lan", "weapon_black_rider_4", "weapon_black_rider_4_caracole", "weapon_bombard_3", "weapon_bombard_4", "weapon_bombard_4_improved_eng", "weapon_bombard_4_improved_nrm", "weapon_bombard_4_larger_aoe_chi", "weapon_bombard_4_mon", "weapon_bombard_4_rus", "weapon_bombard_4_rus_tech", "weapon_bombard_larger_aoe_chi_ha_01", "weapon_cambulance_ranged_2_abb_ha_01", "weapon_cambulance_ranged_incendiary_abb_ha_01", "weapon_camel_archer", "weapon_camel_archer_2_abb", "weapon_camel_archer_2_improved_abb", "weapon_camel_archer_3_abb", "weapon_camel_archer_3_improved_abb", "weapon_camel_archer_4_abb", "weapon_camel_archer_4_improved_abb", "weapon_camel_archer_incendiary", "weapon_camel_archer_incendiary_3", "weapon_camel_archer_incendiary_4", "weapon_camel_archer_incendiary_building_fire_abb", "weapon_camel_archer_melee_abb", "weapon_cannon_4", "weapon_cannon_4_form_fre", "weapon_cannon_4_improved_eng", "weapon_cannon_4_improved_nrm", "weapon_cannon_4_larger_aoe_chi", "weapon_cannon_4_royal_fre", "weapon_cannon_4_rus", "weapon_cannon_barrage_royal_fre", "weapon_castle_lancaster_arrow_lan", "weapon_champion_3_charge_lan", "weapon_champion_3_lan", "weapon_champion_4_charge_lan", "weapon_champion_4_lan", "weapon_champion_throw_3_lan", "weapon_champion_throw_4_lan", "weapon_chevalier_confrere_2_charge_tem", "weapon_chevalier_confrere_2_tem", "weapon_chevalier_confrere_3_charge_tem", "weapon_chevalier_confrere_3_tem", "weapon_chevalier_confrere_4_charge_tem", "weapon_chevalier_confrere_4_tem", "weapon_condo_4_charge_tem", "weapon_condo_4_tem", "weapon_crossbow_3", "weapon_crossbow_3_fre", "weapon_crossbow_3_hre_ha_01", "weapon_crossbow_3_library_upgrade_chi_ha_01", "weapon_crossbow_3_library_upgrade_incendiary_chi_ha_01", "weapon_crossbow_3_melee", "weapon_crossbow_3_melee_nov", "weapon_crossbow_3_melee_rus", "weapon_crossbow_3_mon", "weapon_crossbow_3_nov", "weapon_crossbow_3_rus", "weapon_crossbow_3_siege_damage_hre_ha_01", "weapon_crossbow_4", "weapon_crossbow_4_fre", "weapon_crossbow_4_hre_ha_01", "weapon_crossbow_4_lib_incendiary_building_fire_chi_ha_01", "weapon_crossbow_4_library_upgrade_chi_ha_01", "weapon_crossbow_4_library_upgrade_incendiary_chi_ha_01", "weapon_crossbow_4_melee", "weapon_crossbow_4_melee_rus", "weapon_crossbow_4_mon", "weapon_crossbow_4_rus", "weapon_crossbow_4_siege_damage_hre_ha_01", "weapon_crossbow_incendiary", "weapon_crossbow_incendiary_4", "weapon_crossbow_incendiary_4_hre_ha_01", "weapon_crossbow_incendiary_4_mon", "weapon_crossbow_incendiary_4_siege_damage_hre_ha_01", "weapon_crossbow_incendiary_building_fire", "weapon_crossbow_incendiary_building_fire_hre_ha_01", "weapon_crossbow_incendiary_hre_ha_01", "weapon_crossbow_incendiary_mon", "weapon_crossbow_incendiary_rus", "weapon_crossbow_incendiary_siege_damage_hre_ha_01", "weapon_crossbow_incendiary_sul", "weapon_culverin_4", "weapon_culverin_4_form_fre", "weapon_culverin_4_improved_eng", "weapon_culverin_4_improved_nrm", "weapon_culverin_4_larger_aoe_chi", "weapon_culverin_4_royal_fre", "weapon_culverin_4_rus", "weapon_dock_arrows", "weapon_dromon_flame_thrower_byz", "weapon_dummy", "weapon_dummy_horse_hack", "weapon_dummy_horse_melee_hack", "weapon_dummy_horse_ranged_hack", "weapon_dummy_warship", "weapon_ea_crossbow_incendiary_building_fire_sul", "weapon_ea_incendiary_building_fire_sul", "weapon_earlsguard_francisca_throw_3_lan", "weapon_earlsguard_francisca_throw_4_lan", "weapon_elephant_archer_crossbow_incendiary_sul", "weapon_elephant_archer_incendiary_sul", "weapon_firelancer_2_charge_chi_ha_01", "weapon_firelancer_2_chi_ha_01", "weapon_firelancer_3_charge_chi", "weapon_firelancer_3_chi", "weapon_firelancer_4_charge_chi", "weapon_firelancer_4_chi", "weapon_freebornwarrior_3_charge_mal", "weapon_freebornwarrior_3_mal", "weapon_freebornwarrior_4_charge_mal", "weapon_freebornwarrior_4_mal", "weapon_genitour_3_tem", "weapon_genitour_4_tem", "weapon_genitour_incen_3_tem", "weapon_genitour_incen_4_tem", "weapon_genitour_incen_building_fire_tem", "weapon_genoese_crossbow", "weapon_genoese_crossbow_3_tem", "weapon_genoese_crossbow_4_tem", "weapon_genoese_crossbow_incendiary_3_tem", "weapon_genoese_crossbow_incendiary_4_tem", "weapon_genoese_crossbow_incendiary_building_fire_tem", "weapon_great_bombard_3_ott", "weapon_great_bombard_4_ott", "weapon_great_bombard_emplacement_ott", "weapon_great_wall_bees_chi", "weapon_grenade_2", "weapon_grenade_3", "weapon_grenade_3_chi_ha", "weapon_grenade_4", "weapon_grenade_improved_3_chi_ha", "weapon_grenade_improved_4_chi_ha_01", "weapon_grenade_siege_chi", "weapon_grenadier_2_melee_chi", "weapon_hand_axe_ayy", "weapon_handcannon_3", "weapon_handcannon_3_lan_college", "weapon_handcannon_3_melee", "weapon_handcannon_3_ott", "weapon_handcannon_4", "weapon_handcannon_4_hre_ha_1", "weapon_handcannon_4_leadshot", "weapon_handcannon_4_leadshot_hre_ha_1", "weapon_handcannon_4_leadshot_rus", "weapon_handcannon_4_mal", "weapon_handcannon_4_melee", "weapon_handcannon_4_melee_jeanne_fre_ha_01", "weapon_handcannon_4_melee_rus", "weapon_handcannon_4_mon", "weapon_handcannon_4_ott", "weapon_handcannon_4_ranged_jeanne_fre_ha_01", "weapon_handcannon_4_ranged_jeanne_projectile_cannon_fre_ha_01", "weapon_handcannon_4_rus", "weapon_handcannon_leadshot_mal", "weapon_heavy_spearman_3_brace_tem", "weapon_heavy_spearman_3_charge_tem", "weapon_heavy_spearman_3_tem", "weapon_heavy_spearman_4_brace_tem", "weapon_heavy_spearman_4_charge_tem", "weapon_heavy_spearman_4_tem", "weapon_hobelar_2_charge_lan", "weapon_hobelar_2_lan", "weapon_hobelar_3_charge_lan", "weapon_hobelar_3_lan", "weapon_hobelar_4_charge_lan", "weapon_hobelar_4_lan", "weapon_holy_order_hospitaller_charge_cru", "weapon_holy_order_hospitaller_cru", "weapon_holy_order_hospitaller_master_charge_cru", "weapon_holy_order_hospitaller_master_cru", "weapon_holy_order_templar_charge_cru", "weapon_holy_order_templar_cru", "weapon_holy_order_templar_master_charge_cru", "weapon_holy_order_templar_master_cru", "weapon_holy_order_teuton_charge_cru", "weapon_holy_order_teuton_cru", "weapon_holy_order_teuton_master_charge_cru", "weapon_holy_order_teuton_master_cru", "weapon_horse_archer_improved_incendiary_mon", "weapon_horsearcher_2", "weapon_horsearcher_2_mon", "weapon_horsearcher_2_ott", "weapon_horsearcher_3", "weapon_horsearcher_3_jpn", "weapon_horsearcher_3_mon", "weapon_horsearcher_3_nov", "weapon_horsearcher_3_ott", "weapon_horsearcher_3_rus", "weapon_horsearcher_4", "weapon_horsearcher_4_jpn", "weapon_horsearcher_4_mon", "weapon_horsearcher_4_ott", "weapon_horsearcher_4_rus", "weapon_horsearcher_incendiary_2_ott", "weapon_horsearcher_incendiary_3_jpn", "weapon_horsearcher_incendiary_3_mon", "weapon_horsearcher_incendiary_3_ott", "weapon_horsearcher_incendiary_4_jpn", "weapon_horsearcher_incendiary_4_mon", "weapon_horsearcher_incendiary_4_ott", "weapon_horsearcher_incendiary_4_rus", "weapon_horsearcher_incendiary_building_fire_jpn", "weapon_horsearcher_incendiary_building_fire_mon", "weapon_horsearcher_incendiary_building_fire_ott", "weapon_horsearcher_incendiary_building_fire_rus", "weapon_horsearcher_incendiary_mon", "weapon_horsearcher_incendiary_rus", "weapon_horsearcher_melee_mon", "weapon_horsearcher_melee_rus", "weapon_horseman_1", "weapon_horseman_1_charge", "weapon_horseman_1_charge_hre_ha_01", "weapon_horseman_1_hre_ha_01", "weapon_horseman_1_mon", "weapon_horseman_2", "weapon_horseman_2_charge", "weapon_horseman_2_charge_fire_chi_ha_01", "weapon_horseman_2_charge_hre_ha_01", "weapon_horseman_2_charge_mal", "weapon_horseman_2_charge_ott", "weapon_horseman_2_charge_rus", "weapon_horseman_2_charge_sul", "weapon_horseman_2_charge_tem", "weapon_horseman_2_hippodrome_byz", "weapon_horseman_2_hippodrome_charge_byz", "weapon_horseman_2_hre_ha_01", "weapon_horseman_2_mal", "weapon_horseman_2_mon", "weapon_horseman_2_ott", "weapon_horseman_2_rus", "weapon_horseman_2_sul", "weapon_horseman_3", "weapon_horseman_3_charge", "weapon_horseman_3_charge_fire_chi_ha_01", "weapon_horseman_3_charge_hre_ha_01", "weapon_horseman_3_charge_mal", "weapon_horseman_3_charge_nov", "weapon_horseman_3_charge_ott", "weapon_horseman_3_charge_rus", "weapon_horseman_3_charge_sul", "weapon_horseman_3_charge_tem", "weapon_horseman_3_hippodrome_byz", "weapon_horseman_3_hippodrome_charge_byz", "weapon_horseman_3_hre_ha_01", "weapon_horseman_3_mal", "weapon_horseman_3_mon", "weapon_horseman_3_nov", "weapon_horseman_3_ott", "weapon_horseman_3_rus", "weapon_horseman_3_sul", "weapon_horseman_4", "weapon_horseman_4_charge", "weapon_horseman_4_charge_fire_chi_ha_01", "weapon_horseman_4_charge_hre_ha_01", "weapon_horseman_4_charge_mal", "weapon_horseman_4_charge_ott", "weapon_horseman_4_charge_rus", "weapon_horseman_4_charge_sul", "weapon_horseman_4_charge_tem", "weapon_horseman_4_hippodrome_byz", "weapon_horseman_4_hippodrome_charge_byz", "weapon_horseman_4_hre_ha_01", "weapon_horseman_4_mal", "weapon_horseman_4_mon", "weapon_horseman_4_ott", "weapon_horseman_4_rus", "weapon_horseman_4_sul", "weapon_horseman_charge_no_damage", "weapon_hospitaller_2_charge_tem", "weapon_hospitaller_2_tem", "weapon_hospitaller_3_charge_tem", "weapon_hospitaller_3_tem", "weapon_hospitaller_4_charge_tem", "weapon_hospitaller_4_tem", "weapon_huihui_pao", "weapon_javelin_1", "weapon_javelin_1_donso", "weapon_javelin_2", "weapon_javelin_2_abb_ha_01", "weapon_javelin_2_melee", "weapon_javelin_3", "weapon_javelin_3_melee", "weapon_javelin_4", "weapon_javelin_4_melee", "weapon_javelin_donso_2_mal", "weapon_javelin_donso_3_mal", "weapon_javelin_donso_4_mal", "weapon_jeanne_follower_3", "weapon_jeanne_follower_4", "weapon_jeanne_follower_charge_3", "weapon_jeanne_follower_charge_4", "weapon_jeanne_rider_3", "weapon_jeanne_rider_4", "weapon_jeanne_rider_charge_3", "weapon_jeanne_rider_charge_4", "weapon_keep_arbalest_a", "weapon_keep_arbalest_b", "weapon_keep_arbalest_c", "weapon_keep_arbalest_d", "weapon_keep_arrows_a", "weapon_keep_arrows_a_poison_mal", "weapon_keep_arrows_b", "weapon_keep_arrows_b_poison_mal", "weapon_keep_arrows_c", "weapon_keep_arrows_c_poison_mal", "weapon_keep_arrows_garrison", "weapon_keep_arrows_garrison_incen", "weapon_keep_arrows_garrison_poison_mal", "weapon_keep_arrows_incen_a", "weapon_keep_arrows_incen_b", "weapon_keep_arrows_incen_c", "weapon_keep_bolts_garrison_ott", "weapon_keep_cannon", "weapon_keep_cannon_berkshire", "weapon_keep_handcannon_chi", "weapon_keep_handcannon_garrison_chi", "weapon_keep_mangonel", "weapon_keep_murder_hole", "weapon_keep_rocket_jpn", "weapon_keep_springald", "weapon_keep_springald_1_berkshire", "weapon_keep_springald_rus", "weapon_keep_trebuchet", "weapon_khaganate_huihui_pao", "weapon_khagnate_huihui_pao_merc_byz", "weapon_khagnate_knight_rus_mon", "weapon_khan_1_mon", "weapon_khan_2_mon", "weapon_khan_3_mon", "weapon_khan_4_mon", "weapon_khan_hunter_deer_2_mon", "weapon_khan_hunter_deer_3_mon", "weapon_khan_hunter_deer_4_mon", "weapon_khan_hunter_deer_incen_2_mon", "weapon_khan_hunter_deer_incen_3_mon", "weapon_khan_hunter_deer_incen_4_mon", "weapon_khan_hunter_deer_incen_building_fire_mon", "weapon_khan_incen_4_mon", "weapon_king_ivan_1handsword_charge", "weapon_king_ivan_charge", "weapon_king_ivan_rus", "weapon_kitbuqa_cmp_mon", "weapon_knight_2", "weapon_knight_2_axe_rus", "weapon_knight_2_charge", "weapon_knight_2_charge_fre", "weapon_knight_2_charge_rus", "weapon_knight_2_rus", "weapon_knight_3", "weapon_knight_3_abb_ha_01", "weapon_knight_3_axe_rus", "weapon_knight_3_byz", "weapon_knight_3_charge", "weapon_knight_3_charge_abb_ha_01", "weapon_knight_3_charge_byz", "weapon_knight_3_charge_chi", "weapon_knight_3_charge_collarofesses_lan", "weapon_knight_3_charge_fre", "weapon_knight_3_charge_hippodrome_byz", "weapon_knight_3_charge_hippodrome_byz", "weapon_knight_3_charge_hre_ha_01", "weapon_knight_3_charge_improved_sul", "weapon_knight_3_charge_jeanne_fre_ha_01", "weapon_knight_3_charge_nov", "weapon_knight_3_charge_rus", "weapon_knight_3_chi", "weapon_knight_3_collarofesses_lan", "weapon_knight_3_hre_ha_01", "weapon_knight_3_improved_ott", "weapon_knight_3_improved_sul", "weapon_knight_3_jeanne_fre_ha_01", "weapon_knight_3_nov", "weapon_knight_3_ott", "weapon_knight_3_rus", "weapon_knight_4", "weapon_knight_4_abb_ha_01", "weapon_knight_4_axe_rus", "weapon_knight_4_byz", "weapon_knight_4_charge", "weapon_knight_4_charge_abb_ha_01", "weapon_knight_4_charge_byz", "weapon_knight_4_charge_chi", "weapon_knight_4_charge_collarofesses_lan", "weapon_knight_4_charge_fre", "weapon_knight_4_charge_hippodrome_byz", "weapon_knight_4_charge_hre_ha_01", "weapon_knight_4_charge_improved_sul", "weapon_knight_4_charge_rus", "weapon_knight_4_chi", "weapon_knight_4_collarofesses_lan", "weapon_knight_4_hre_ha_01", "weapon_knight_4_improved_ott", "weapon_knight_4_improved_sul", "weapon_knight_4_ott", "weapon_knight_4_rus", "weapon_knight_templar_3_charge_tem", "weapon_knight_templar_3_tem", "weapon_knight_templar_4_charge_tem", "weapon_knight_templar_4_tem", "weapon_knight_william", "weapon_kremlin_arrows", "weapon_kremlin_arrows_garrison", "weapon_lancaster_manor_arrow", "weapon_lancer_2_charge_mon", "weapon_lancer_2_mon", "weapon_lancer_3_charge_cmp_mon", "weapon_lancer_3_charge_fire_chi_ha_01", "weapon_lancer_3_charge_mon", "weapon_lancer_3_cmp_mon", "weapon_lancer_3_mon", "weapon_lancer_4_charge_fire_chi_ha_01", "weapon_lancer_4_charge_mon", "weapon_lancer_4_mon", "weapon_landmark_ozutsu_jpn", "weapon_landsknecht_3_charge_halberd_hre_ha_01", "weapon_landsknecht_3_charge_hre", "weapon_landsknecht_3_charge_hre_ha_01", "weapon_landsknecht_3_halberd_hre_ha_01", "weapon_landsknecht_3_hre", "weapon_landsknecht_3_hre_ha_01", "weapon_landsknecht_4_charge_halberd_hre_ha_01", "weapon_landsknecht_4_charge_hre", "weapon_landsknecht_4_charge_hre_ha_01", "weapon_landsknecht_4_halberd_hre_ha_01", "weapon_landsknecht_4_hre", "weapon_landsknecht_4_hre_ha_01", "weapon_leader_baibars_ayy", "weapon_leader_commander_ayy", "weapon_leader_commander_charge_ayy", "weapon_leader_saladin_knight_ayy", "weapon_leader_saladin_knight_charge_ayy", "weapon_leader_saladin_maa_ayy", "weapon_leader_saladin_maa_charge_ayy", "weapon_leader_shirkuh_ayy", "weapon_leader_shirkuh_charge_ayy", "weapon_leader_tughtekin_ayy", "weapon_longbowman_incendiary", "weapon_longbowman_incendiary_3", "weapon_longbowman_incendiary_4", "weapon_longbowman_incendiary_building_fire_eng", "weapon_mameluke_sword_3", "weapon_mameluke_sword_3_charge", "weapon_mameluke_sword_4", "weapon_mameluke_sword_4_charge", "weapon_mamluk_melee_2_abb_ha_01", "weapon_mamluk_melee_3_abb_ha_01", "weapon_mamluk_melee_4_abb_ha_01", "weapon_mamluk_ranged_2_abb_ha_01", "weapon_mamluk_ranged_2_incendiary_abb_ha_01", "weapon_mamluk_ranged_3_abb_ha_01", "weapon_mamluk_ranged_3_incendiary_abb_ha_01", "weapon_mamluk_ranged_4_abb_ha_01", "weapon_mamluk_ranged_4_incendiary_abb_ha_01", "weapon_mamluk_ranged_4_incendiary_building_fire_abb_ha_01", "weapon_manatarms_1", "weapon_manatarms_1_1handmace_charge_cru", "weapon_manatarms_1_1handmace_cru", "weapon_manatarms_1_2handaxe_charge_cru", "weapon_manatarms_1_2handaxe_cru", "weapon_manatarms_1_2handmace_charge_cru", "weapon_manatarms_1_2handmace_cru", "weapon_manatarms_1_charge", "weapon_manatarms_1_charge_cru", "weapon_manatarms_1_charge_jpn", "weapon_manatarms_1_cru", "weapon_manatarms_1_eng_readability_test", "weapon_manatarms_1_jpn", "weapon_manatarms_2", "weapon_manatarms_2_1handmace_charge_cru", "weapon_manatarms_2_1handmace_charge_hre", "weapon_manatarms_2_1handmace_charge_hre_ha_01", "weapon_manatarms_2_1handmace_cru", "weapon_manatarms_2_1handmace_hre", "weapon_manatarms_2_1handmace_hre_ha_01", "weapon_manatarms_2_2handaxe_charge_cru", "weapon_manatarms_2_2handaxe_charge_hre", "weapon_manatarms_2_2handaxe_charge_hre_ha_01", "weapon_manatarms_2_2handaxe_cru", "weapon_manatarms_2_2handaxe_hre", "weapon_manatarms_2_2handaxe_hre_ha_01", "weapon_manatarms_2_2handmace_charge_cru", "weapon_manatarms_2_2handmace_charge_hre", "weapon_manatarms_2_2handmace_charge_hre_ha_01", "weapon_manatarms_2_2handmace_cru", "weapon_manatarms_2_2handmace_hre", "weapon_manatarms_2_2handmace_hre_ha_01", "weapon_manatarms_2_charge", "weapon_manatarms_2_charge_chi_ha_01", "weapon_manatarms_2_charge_cru", "weapon_manatarms_2_charge_hre", "weapon_manatarms_2_charge_hre_ha_01", "weapon_manatarms_2_charge_jpn", "weapon_manatarms_2_charge_mal", "weapon_manatarms_2_chi_ha_01", "weapon_manatarms_2_cru", "weapon_manatarms_2_hre", "weapon_manatarms_2_hre_ha_01", "weapon_manatarms_2_jpn", "weapon_manatarms_2_mal", "weapon_manatarms_3", "weapon_manatarms_3_1handmace_charge_cru", "weapon_manatarms_3_1handmace_charge_hre", "weapon_manatarms_3_1handmace_charge_hre_ha_01", "weapon_manatarms_3_1handmace_cru", "weapon_manatarms_3_1handmace_hre", "weapon_manatarms_3_1handmace_hre_ha_01", "weapon_manatarms_3_2handaxe_byz", "weapon_manatarms_3_2handaxe_charge_byz", "weapon_manatarms_3_2handaxe_charge_cru", "weapon_manatarms_3_2handaxe_charge_hre", "weapon_manatarms_3_2handaxe_charge_hre_ha_01", "weapon_manatarms_3_2handaxe_cru", "weapon_manatarms_3_2handaxe_hre", "weapon_manatarms_3_2handaxe_hre_ha_01", "weapon_manatarms_3_2handmace_charge_cru", "weapon_manatarms_3_2handmace_charge_hre", "weapon_manatarms_3_2handmace_charge_hre_ha_01", "weapon_manatarms_3_2handmace_cru", "weapon_manatarms_3_2handmace_hre", "weapon_manatarms_3_2handmace_hre_ha_01", "weapon_manatarms_3_abb", "weapon_manatarms_3_byz", "weapon_manatarms_3_charge", "weapon_manatarms_3_charge_abb", "weapon_manatarms_3_charge_byz", "weapon_manatarms_3_charge_chi", "weapon_manatarms_3_charge_cru", "weapon_manatarms_3_charge_generic_abb", "weapon_manatarms_3_charge_hre", "weapon_manatarms_3_charge_hre_ha_01", "weapon_manatarms_3_charge_improved_ott", "weapon_manatarms_3_charge_improved_sul", "weapon_manatarms_3_charge_jpn", "weapon_manatarms_3_charge_mal", "weapon_manatarms_3_charge_nov", "weapon_manatarms_3_charge_ott", "weapon_manatarms_3_charge_rus", "weapon_manatarms_3_charge_sul", "weapon_manatarms_3_charge_tem", "weapon_manatarms_3_chi", "weapon_manatarms_3_cru", "weapon_manatarms_3_generic_abb", "weapon_manatarms_3_hre", "weapon_manatarms_3_hre_ha_01", "weapon_manatarms_3_improved_ott", "weapon_manatarms_3_improved_sul", "weapon_manatarms_3_jpn", "weapon_manatarms_3_mal", "weapon_manatarms_3_nov", "weapon_manatarms_3_ott", "weapon_manatarms_3_rus", "weapon_manatarms_3_sul", "weapon_manatarms_3_tem", "weapon_manatarms_4", "weapon_manatarms_4_1handmace_charge_cru", "weapon_manatarms_4_1handmace_charge_hre", "weapon_manatarms_4_1handmace_charge_hre_ha_01", "weapon_manatarms_4_1handmace_cru", "weapon_manatarms_4_1handmace_hre", "weapon_manatarms_4_1handmace_hre_ha_01", "weapon_manatarms_4_2handaxe_byz", "weapon_manatarms_4_2handaxe_charge_byz", "weapon_manatarms_4_2handaxe_charge_cru", "weapon_manatarms_4_2handaxe_charge_hre", "weapon_manatarms_4_2handaxe_charge_hre_ha_01", "weapon_manatarms_4_2handaxe_cru", "weapon_manatarms_4_2handaxe_hre", "weapon_manatarms_4_2handaxe_hre_ha_01", "weapon_manatarms_4_2handmace_charge_cru", "weapon_manatarms_4_2handmace_charge_hre", "weapon_manatarms_4_2handmace_charge_hre_ha_01", "weapon_manatarms_4_2handmace_cru", "weapon_manatarms_4_2handmace_hre", "weapon_manatarms_4_2handmace_hre_ha_01", "weapon_manatarms_4_abb", "weapon_manatarms_4_byz", "weapon_manatarms_4_charge", "weapon_manatarms_4_charge_abb", "weapon_manatarms_4_charge_byz", "weapon_manatarms_4_charge_chi", "weapon_manatarms_4_charge_cru", "weapon_manatarms_4_charge_hre", "weapon_manatarms_4_charge_hre_ha_01", "weapon_manatarms_4_charge_improved_ott", "weapon_manatarms_4_charge_improved_sul", "weapon_manatarms_4_charge_jpn", "weapon_manatarms_4_charge_mal", "weapon_manatarms_4_charge_ott", "weapon_manatarms_4_charge_rus", "weapon_manatarms_4_charge_sul", "weapon_manatarms_4_charge_tem", "weapon_manatarms_4_chi", "weapon_manatarms_4_cru", "weapon_manatarms_4_hre", "weapon_manatarms_4_hre_ha_01", "weapon_manatarms_4_improved_ott", "weapon_manatarms_4_improved_sul", "weapon_manatarms_4_jpn", "weapon_manatarms_4_mal", "weapon_manatarms_4_ott", "weapon_manatarms_4_rus", "weapon_manatarms_4_sul", "weapon_manatarms_4_tem", "weapon_manatarms_aoe_sweep_chi", "weapon_manatarms_elite_chi", "weapon_manatarms_mon_3", "weapon_manatarms_mon_4", "weapon_mangonel_3", "weapon_mangonel_3_improved_eng", "weapon_mangonel_3_improved_nrm", "weapon_mangonel_3_incendiary", "weapon_mangonel_3_incendiary_mon", "weapon_mangonel_3_incendiary_nov", "weapon_mangonel_3_incendiary_rus", "weapon_mangonel_3_mon", "weapon_mangonel_3_nov", "weapon_mangonel_3_rus", "weapon_mangonel_4_adjustable_crossbars", "weapon_mansa_javelin_2", "weapon_mansa_javelin_3", "weapon_mansa_javelin_4", "weapon_mansa_musofadi_2_charge_mal", "weapon_mansa_musofadi_2_mal", "weapon_mansa_musofadi_3_charge_mal", "weapon_mansa_musofadi_3_mal", "weapon_mansa_musofadi_4_charge_mal", "weapon_mansa_musofadi_4_mal", "weapon_mehter_2_ott", "weapon_militia", "weapon_militia_charge_cru", "weapon_militia_cru", "weapon_ming_guard_charge_chi", "weapon_ming_guard_chi", "weapon_monk_3_charge_rus", "weapon_monk_3_rus", "weapon_monk_shaolin_3_chi", "weapon_mounted_maa_2_charge_lan", "weapon_mounted_maa_2_charge_lan_esses", "weapon_mounted_maa_2_lan", "weapon_mounted_maa_2_lan_esses", "weapon_mounted_maa_3_charge_lan", "weapon_mounted_maa_3_charge_lan_esses", "weapon_mounted_maa_3_lan", "weapon_mounted_maa_3_lan_esses", "weapon_mounted_maa_4_charge_lan", "weapon_mounted_maa_4_charge_lan_esses", "weapon_mounted_maa_4_lan", "weapon_mounted_maa_4_lan_esses", "weapon_mounted_samurai_3_charge_jpn", "weapon_mounted_samurai_3_jpn", "weapon_mounted_samurai_4_charge_jpn", "weapon_mounted_samurai_4_jpn", "weapon_naval_arrow_ship_arrow", "weapon_naval_arrow_ship_incendiary", "weapon_naval_combat_ship_arrow_abb", "weapon_naval_combat_ship_arrow_sul", "weapon_naval_combat_ship_crossbow", "weapon_naval_combat_ship_crossbow_asian", "weapon_naval_combat_ship_crossbow_eastern", "weapon_naval_combat_ship_crossbow_forecastle", "weapon_naval_combat_ship_crossbow_second_ballista", "weapon_naval_combat_ship_crossbow_second_ballista_eng", "weapon_naval_combat_ship_crossbow_vis", "weapon_naval_combat_ship_crossbow_western", "weapon_naval_combat_ship_crossbow_western_eng", "weapon_naval_combat_ship_culverin", "weapon_naval_combat_ship_culverin_forecastle", "weapon_naval_combat_ship_culverin_vis", "weapon_naval_combat_ship_springald", "weapon_naval_combat_ship_springald_cru", "weapon_naval_combat_ship_springald_flaming_tem", "weapon_naval_combat_ship_springald_fre", "weapon_naval_combat_ship_swivel_ballista", "weapon_naval_dhow_arrow_abb", "weapon_naval_fire_arrows_cru", "weapon_naval_fireship", "weapon_naval_fireship_explosive", "weapon_naval_fireship_incendiaries", "weapon_naval_fireship_incendiaries_explosive", "weapon_naval_fireship_upgraded_byz", "weapon_naval_fireship_upgraded_explosives_byz", "weapon_naval_fishing_ship_arrow", "weapon_naval_fishing_ship_arrow_sul", "weapon_naval_galleass_bombard_fre", "weapon_naval_galley_bombard_ott", "weapon_naval_javelin", "weapon_naval_javelin_burst", "weapon_naval_javelin_mal", "weapon_naval_lodya_arrow_incendiary_rus", "weapon_naval_lodya_arrow_incendiary_vis_rus", "weapon_naval_lodya_arrow_rus", "weapon_naval_lodya_arrow_vis_rus", "weapon_naval_mounted_gun", "weapon_naval_nest_of_bees_4_chi", "weapon_naval_swivel_cannon", "weapon_naval_war_galley_bombard", "weapon_naval_war_galley_springald", "weapon_naval_warship_cannon", "weapon_naval_warship_cannon_ai", "weapon_naval_warship_cannon_ai_asian", "weapon_naval_warship_cannon_ai_eastern", "weapon_naval_warship_cannon_ai_western", "weapon_naval_warship_cannon_ai_western_eng", "weapon_naval_warship_cannon_asian", "weapon_naval_warship_cannon_eastern", "weapon_naval_warship_cannon_western", "weapon_naval_warship_cannon_western_eng", "weapon_naval_warship_chain_cannon", "weapon_naval_warship_chain_cannon_ai", "weapon_naval_warship_rocket_ai_jpn", "weapon_naval_warship_rocket_jpn", "weapon_naval_warship_springald", "weapon_naval_warship_springald_ai", "weapon_nest_of_bees_4_chi", "weapon_nest_of_bees_4_improved_chi", "weapon_nest_of_bees_4_incendiary_chi", "weapon_nest_of_bees_4_larger_aoe_chi", "weapon_nest_of_bees_4_viz_chi", "weapon_odachi_1_charge_jpn", "weapon_odachi_1_jpn", "weapon_odachi_2_charge_jpn", "weapon_odachi_2_jpn", "weapon_odachi_3_charge_jpn", "weapon_odachi_3_jpn", "weapon_odachi_4_charge_jpn", "weapon_odachi_4_jpn", "weapon_odo_charge_cmp_tem", "weapon_odo_cmp_tem", "weapon_onna_bugeisha_2_charge_jpn", "weapon_onna_bugeisha_2_jpn", "weapon_onna_bugeisha_3_charge_jpn", "weapon_onna_bugeisha_3_jpn", "weapon_onna_bugeisha_4_charge_jpn", "weapon_onna_bugeisha_4_jpn", "weapon_outpost_arrows", "weapon_outpost_arrows_garrison", "weapon_outpost_bolts_garrison_ott", "weapon_outpost_cannon", "weapon_outpost_handcannon_chi", "weapon_outpost_javelin_mal", "weapon_outpost_mangonel", "weapon_outpost_murder_hole", "weapon_outpost_springald", "weapon_ozutsu_4_jpn", "weapon_photontrooper", "weapon_pirate_abb_ha_01", "weapon_pirate_archer_ayy", "weapon_pirate_ayy", "weapon_ram_3", "weapon_ram_3_mon", "weapon_ram_3_nov", "weapon_ram_3_rus", "weapon_ram_4", "weapon_ram_4_rus", "weapon_ram_flame_thrower_byz", "weapon_ram_tower", "weapon_ram_tower_3_abb_ha_01", "weapon_ram_tower_arrow_cru", "weapon_range_dummy_horse_hack", "weapon_repeater_crossbow_2_chi", "weapon_repeater_crossbow_2_library_upgrade_chi_ha_01", "weapon_repeater_crossbow_2_library_upgrade_incendiary_chi_ha_01", "weapon_repeater_crossbow_3_chi", "weapon_repeater_crossbow_3_library_upgrade_chi_ha_01", "weapon_repeater_crossbow_3_library_upgrade_incendiary_chi_ha_01", "weapon_repeater_crossbow_4_chi", "weapon_repeater_crossbow_4_lib_incendiary_building_fire_chi_ha_01", "weapon_repeater_crossbow_4_library_upgrade_chi_ha_01", "weapon_repeater_crossbow_4_library_upgrade_incendiary_chi_ha_01", "weapon_repeater_crossbow_incendiary_3_chi", "weapon_repeater_crossbow_incendiary_4_chi", "weapon_repeater_crossbow_incendiary_building_fire_chi", "weapon_repeater_crossbow_incendiary_chi", "weapon_ribauldequin_4", "weapon_ribauldequin_4_form_fre", "weapon_ribauldequin_4_royal_fre", "weapon_ribauldequin_4_rus", "weapon_ronin_1_charge_neu", "weapon_ronin_1_neu", "weapon_samurai_katana_1_jpn", "weapon_samurai_katana_2_jpn", "weapon_samurai_katana_3_jpn", "weapon_samurai_katana_4_jpn", "weapon_scorpion_3_improved_eng", "weapon_scorpion_3_improved_nrm", "weapon_scout_1", "weapon_scout_1_chi", "weapon_scout_1_fre", "weapon_scout_1_jeanne_fre_ha_01", "weapon_scout_1_jpn", "weapon_scout_1_mal", "weapon_scout_1_nov", "weapon_scout_1_rus", "weapon_scout_2_mal", "weapon_scout_3_mal", "weapon_scout_4_mal", "weapon_scout_hunt_ranged_1", "weapon_scout_hunt_ranged_1_jeanne_fre_ha_01", "weapon_scout_hunt_ranged_1_nov", "weapon_scout_hunt_ranged_1_rus", "weapon_serjeant_2_tem", "weapon_serjeant_3_tem", "weapon_serjeant_4_tem", "weapon_settlement_arrowslits", "weapon_shield_militia_2_rus", "weapon_shield_villager_cmp_axe_eng", "weapon_shield_villager_cmp_axe_rus", "weapon_shield_villager_cmp_eng", "weapon_shield_villager_cmp_fre", "weapon_shieldwall_hastings_charge_cmp_eng", "weapon_shieldwall_hastings_cmp_eng", "weapon_shinobi_2_jpn", "weapon_siege_dummy", "weapon_spearman_1", "weapon_spearman_1_byz", "weapon_spearman_1_charge", "weapon_spearman_1_charge_byz", "weapon_spearman_1_charge_fire_chi_ha_01", "weapon_spearman_1_charge_hre_ha_01", "weapon_spearman_1_charge_mal", "weapon_spearman_1_charge_rus", "weapon_spearman_1_charge_tem", "weapon_spearman_1_hre_ha_01", "weapon_spearman_1_mal", "weapon_spearman_1_rus", "weapon_spearman_1_tem", "weapon_spearman_2", "weapon_spearman_2_byz", "weapon_spearman_2_charge", "weapon_spearman_2_charge_byz", "weapon_spearman_2_charge_fire_chi_ha_01", "weapon_spearman_2_charge_hre_ha_01", "weapon_spearman_2_charge_mal", "weapon_spearman_2_charge_rus", "weapon_spearman_2_charge_tem", "weapon_spearman_2_hre_ha_01", "weapon_spearman_2_mal", "weapon_spearman_2_rus", "weapon_spearman_2_tem", "weapon_spearman_3", "weapon_spearman_3_byz", "weapon_spearman_3_charge", "weapon_spearman_3_charge_byz", "weapon_spearman_3_charge_fire_chi_ha_01", "weapon_spearman_3_charge_hre_ha_01", "weapon_spearman_3_charge_mal", "weapon_spearman_3_charge_nov", "weapon_spearman_3_charge_rus", "weapon_spearman_3_charge_tem", "weapon_spearman_3_hre_ha_01", "weapon_spearman_3_mal", "weapon_spearman_3_nov", "weapon_spearman_3_rus", "weapon_spearman_3_tem", "weapon_spearman_4", "weapon_spearman_4_byz", "weapon_spearman_4_charge", "weapon_spearman_4_charge_byz", "weapon_spearman_4_charge_fire_chi_ha_01", "weapon_spearman_4_charge_hre_ha_01", "weapon_spearman_4_charge_mal", "weapon_spearman_4_charge_rus", "weapon_spearman_4_charge_tem", "weapon_spearman_4_hre_ha_01", "weapon_spearman_4_mal", "weapon_spearman_4_rus", "weapon_spearman_4_tem", "weapon_spearman_long_1_charge_jpn", "weapon_spearman_long_2_charge_jpn", "weapon_spearman_long_3_charge_jpn", "weapon_spearman_long_4_charge_jpn", "weapon_spearman_long_spear_1_jpn", "weapon_spearman_long_spear_2_jpn", "weapon_spearman_long_spear_3_jpn", "weapon_spearman_long_spear_4_jpn", "weapon_spearwall_1", "weapon_spearwall_1_hre_ha_01", "weapon_spearwall_1_rus", "weapon_spearwall_2", "weapon_spearwall_2_hre_ha_01", "weapon_spearwall_2_rus", "weapon_spearwall_3", "weapon_spearwall_3_hre_ha_01", "weapon_spearwall_3_nov", "weapon_spearwall_3_rus", "weapon_spearwall_4", "weapon_spearwall_4_hre_ha_01", "weapon_spearwall_4_rus", "weapon_spearwall_long_1_jpn", "weapon_spearwall_long_2_jpn", "weapon_spearwall_long_3_jpn", "weapon_spearwall_long_4_jpn", "weapon_spearwall_tem_1", "weapon_spearwall_tem_2", "weapon_spearwall_tem_3", "weapon_spearwall_tem_4", "weapon_springald_3", "weapon_springald_3_mon", "weapon_springald_3_nov", "weapon_springald_3_rus", "weapon_spy_ayy", "weapon_spy_stealth_strike_ayy", "weapon_spy_torch_ayy", "weapon_stone_walls_arrows_tem", "weapon_szlachta_4_charge_tem", "weapon_szlachta_4_tem", "weapon_tc_rocket_jpn", "weapon_teutonic_knight_4_charge_tem", "weapon_teutonic_knight_4_tem", "weapon_torch", "weapon_torch_dragon_fire_hre_ha_01", "weapon_torch_elephant_archer_sul", "weapon_torch_horseman", "weapon_torch_horseman_hre_ha_01", "weapon_torch_horseman_mon", "weapon_torch_horseman_no_burn_mon", "weapon_torch_horseman_rus", "weapon_torch_hre_ha_01", "weapon_torch_jeanne", "weapon_torch_khan_mon", "weapon_torch_khan_no_burn_mon", "weapon_torch_knight_hre_ha_01", "weapon_torch_lancer_mon", "weapon_torch_mon", "weapon_torch_no_burn_mon", "weapon_torch_no_burn_weak_mon", "weapon_torch_rus", "weapon_torch_strong", "weapon_torch_strong_cmp", "weapon_torch_weak", "weapon_torch_weak_hre_ha_01", "weapon_torch_weak_mon", "weapon_torch_weak_rus", "weapon_tower_war_elephant_melee_sul", "weapon_tower_war_elephant_ram_3_sul", "weapon_town_center_arrows", "weapon_town_center_arrows_b_eng", "weapon_town_center_arrows_b_nrm", "weapon_town_center_arrows_garrison", "weapon_town_center_arrows_garrison_non_capital_additional_tc", "weapon_town_center_bolts_garrison_non_capital_ott", "weapon_town_center_bolts_garrison_ott", "weapon_town_center_handcannon_chi", "weapon_town_center_handcannon_garrison_chi", "weapon_trade_cart_guard", "weapon_trebuchet_4_counterweight", "weapon_trebuchet_4_counterweight_aoe_eng", "weapon_trebuchet_4_counterweight_aoe_nrm", "weapon_trebuchet_4_counterweight_shatter_eng", "weapon_trebuchet_4_counterweight_shatter_nrm", "weapon_trebuchet_4_cw_double_tem", "weapon_trebuchet_4_cw_improved_eng", "weapon_trebuchet_4_cw_improved_nrm", "weapon_trebuchet_4_cw_rus", "weapon_trebuchet_4_greek_fire", "weapon_trebuchet_4_ship_double_tem", "weapon_trebuchet_4_siege_double_tem", "weapon_trebuchet_4_tr_improved_eng", "weapon_trebuchet_4_tr_improved_nrm", "weapon_trebuchet_4_tr_rus", "weapon_trebuchet_4_traction", "weapon_trebuchet_4_traction_mon", "weapon_turkic_horsearcher_2_ayy", "weapon_turkic_horsearcher_3_ayy", "weapon_turkic_horsearcher_4_ayy", "weapon_turkic_horsearcher_incendiary_2_ayy", "weapon_turkic_horsearcher_incendiary_3_ayy", "weapon_turkic_horsearcher_incendiary_4_ayy", "weapon_turkic_horsearcher_moving_2_ayy", "weapon_turkic_horsearcher_moving_3_ayy", "weapon_turkic_horsearcher_moving_4_ayy", "weapon_turkic_horsearcher_moving_incendiary_2_ayy", "weapon_turkic_horsearcher_moving_incendiary_3_ayy", "weapon_turkic_horsearcher_moving_incendiary_4_ayy", "weapon_villager_1", "weapon_villager_1_hre_ha_01", "weapon_villager_1_rus", "weapon_villager_akritoi_1", "weapon_villager_akritoi_2", "weapon_villager_akritoi_3", "weapon_villager_akritoi_4", "weapon_villager_hunt_herd", "weapon_villager_hunt_melee", "weapon_villager_hunt_ranged", "weapon_villager_hunt_ranged_eng", "weapon_villager_militarized_2_eng", "weapon_villager_militarized_2_nrm", "weapon_walltower_arrows", "weapon_walltower_arrows_garrison", "weapon_walltower_cannon", "weapon_walltower_handcannon_chi", "weapon_walltower_handcannon_garrison_chi", "weapon_walltower_mangonel", "weapon_walltower_murder_hole", "weapon_walltower_springald", "weapon_war_elephant_charge_3_sul", "weapon_war_elephant_melee_3_sul", "weapon_war_elephant_ram_3_sul", "weapon_war_elephant_spear_3_sul", "weapon_war_elephant_tower_archer_4_sul", "weapon_war_elephant_tower_crossbow_4_sul", "weapon_war_elephant_tower_handcannon_4_sul", "weapon_white_tower_springald_eng", "weapon_white_tower_springald_nrm", "weapon_willikin_eng", "weapon_willikin_incendiary", "weapon_womanatarms_3_charge_jeanne_fre_ha_01", "weapon_womanatarms_3_jeanne_fre_ha_01", "weapon_wooden_fort_arrows_garrison", "weapon_wooden_fort_springald_a_rus", "weapon_wooden_fort_springald_b_rus", "weapon_wynguard_footman_charge_eng_4", "weapon_wynguard_footman_eng_4", "weapon_wynguard_ranger_eng_4", "weapon_wynguard_ranger_incen_building_fire_eng", "weapon_wynguard_ranger_incen_eng_4", "weapon_yeoman_2_lan", "weapon_yeoman_3_lan", "weapon_yeoman_4_lan", "weapon_yeoman_incendiary_2_lan", "weapon_yeoman_incendiary_3_lan", "weapon_yeoman_incendiary_4_lan", "weapon_yeoman_incendiary_building_fire_lan", "weapon_yeoman_synchronized_shot_2", "weapon_yeoman_synchronized_shot_3", "weapon_yeoman_synchronized_shot_4", "weapon_yuan_guard_chi_ha_01", "werewolf_attack_dangerous_1", "werewolf_attack_dangerous_1_charge", "werewolf_attack_dangerous_1_siege", "werewolf_attack_dangerous_2", "werewolf_attack_dangerous_2_charge", "werewolf_attack_dangerous_2_siege", "werewolf_attack_dangerous_3", "werewolf_attack_dangerous_3_charge", "werewolf_attack_dangerous_3_siege", "werewolf_attack_dangerous_4", "werewolf_attack_dangerous_4_charge", "werewolf_attack_dangerous_4_siege", "wolf_attack_dangerous", }

-- Random float helper
function RND_Rand(min, max)
    return min + (max - min) * RND_BaseRand()
end

function RND_BaseRand()
	return World_GetRand(0, 1000000) / 1000000.0
end

function RND_RandInt(min, max)
    return World_GetRand(min, max)
end

function RND_Chance(chance_decimal)
	if(World_GetRand(0, 99) < chance_decimal * 100) then
		return 1
	else return 0
	end
end


-- Apply a single modifier
function RND_ApplyMod(player_id, ebp, RND_type, RND_value)
    local m = Modifier_Create(MAT_EntityType, RND_type, MUT_Multiplication, false, RND_value, ebp)
    Modifier_ApplyToPlayer(m, player_id, 0.0)
end

function RND_ApplyModAdditive(player_id, ebp, RND_type, RND_value)
    local m = Modifier_Create(MAT_EntityType, RND_type, MUT_Addition, false, RND_value, ebp)
    Modifier_ApplyToPlayer(m, player_id, 0.0)
end


RND_BP_UNIT_CLASS = "annihilation_condition" -- goofy ahh unit class name
RND_BP_WORKER = "worker"
RND_BP_BUILDING = "building"
RND_BP_UPGRADE = "upgrade"
RND_BP_GAIA = "gaia"
RND_BP_TOWN_CENTER = "town_center"
RND_BP_ECON_BUILDING = "economy_building"
RND_BP_WALL = "wall"
RND_BP_HOUSE = "house"

RND_OPTIONS = {
	win = { -- win conditions
		la = true, -- landmark
		sa = true, -- sacred
		wo = true, -- wonder
	},
	mch = { -- match options
		sc = false, -- show scores
		ma = "concealed", -- map state
		re = false -- reveal on elim
	}
}

function RND_DealWithOptions()
	local options = { }
	Setup_GetWinConditionOptions(options)
	
	if not options then
		return
	end
	
	if options.section_win_conditions then
		if options.section_win_conditions.option_win_condition_landmarks ~= nil then RND_OPTIONS.win.la = options.section_win_conditions.option_win_condition_landmarks end
		if options.section_win_conditions.option_win_condition_sacred ~= nil then RND_OPTIONS.win.sa = options.section_win_conditions.option_win_condition_sacred end
		if options.section_win_conditions.option_win_condition_wonder ~= nil then RND_OPTIONS.win.wo = options.section_win_conditions.option_win_condition_wonder end
	end
	
	if options.section_match_options then
		if options.section_match_options.option_match_option_scores ~= nil then RND_OPTIONS.mch.sc = options.section_match_options.option_match_option_scores end
		if options.section_match_options.enum_map_state then
			if options.section_match_options.enum_map_state.enum_value == options.section_match_options.enum_map_state.enum_items.map_state_concealed then
				RND_OPTIONS.mch.ma = "concealed"
			elseif options.section_match_options.enum_map_state.enum_value == options.section_match_options.enum_map_state.enum_items.map_state_explored then
				RND_OPTIONS.mch.ma = "explored"
			elseif options.section_match_options.enum_map_state.enum_value == options.section_match_options.enum_map_state.enum_items.map_state_revealed then
				RND_OPTIONS.mch.ma = "revealed"
			end
		end
		if options.section_match_options.option_reveal_on_elimination ~= nil then RND_OPTIONS.mch.re = options.section_match_options.option_reveal_on_elimination end
	end
end

function RND_OnGameSetup()
	RND_DealWithOptions()
	
	-- import necessary win conditions
	
	if RND_OPTIONS.win.la then
		import("winconditions/conquest.scar")       -- landmark destruction (original “Landmark Victory”) 
	end
	if RND_OPTIONS.win.wo then
		import("winconditions/wonder.scar")         -- Wonder defense victory
	end
	if RND_OPTIONS.win.sa then
		import("winconditions/religious.scar")      -- Sacred site/reflic victory
	end
end

function RND_PreInit()
	local rFood = RND_RandInt(0, 200*2)
	local rWood = RND_RandInt(0, 150*2)
	local rGold = RND_RandInt(0, 100*2)
	local rStone = RND_RandInt(0, 100*2)
	
	for _, player in pairs(PLAYERS) do
		Player_SetResource(player.id, RT_Food, rFood)
		Player_SetResource(player.id, RT_Wood, rWood)
		Player_SetResource(player.id, RT_Gold, rGold)
		Player_SetResource(player.id, RT_Stone, rStone)
	end
	
	RND_PopChange(RND_RandInt(0, 100), RND_RandInt(375, 425))
	RND_ApplyBonus(BP_GetEntityBlueprintsWithType({RND_BP_BUILDING, RND_BP_WORKER, RND_BP_UNIT_CLASS}))
	
	-- doesn't work properly
	--RND_ApplyBonusToResourceDep(BP_GetEntityBlueprintsWithType(RND_BP_GAIA))
	
	for _, wpn_name in pairs(listOfAllWeapons) do
		local rates = {
			damage = 2.0 ^ RND_Rand(-1.0, 1.0),
			--accuracy = RND_Rand(0.5, 1.5),
			range = 2.0 ^ RND_Rand(-1.5, 1.5),
			atk_time_mult = RND_Rand(RND_Rand(0.0, 0.5), RND_Rand(1.5, 2.0)),
			burst_rate = 2.0 ^ RND_Rand(-1.5, 2.5),
			siege_setup = RND_Rand(0.0, 2.0)
		}
		local bp = BP_GetWeaponBlueprint(wpn_name)
		for _, player in pairs(PLAYERS) do
			Modifier_ApplyToPlayer(Modifier_Create(MAT_WeaponType, "damage_weapon_modifier", MUT_Multiplication, false, rates.damage, bp), player.id, 0.0)
			Modifier_ApplyToPlayer(Modifier_Create(MAT_WeaponType, "range_weapon_modifier", MUT_Multiplication, false, rates.range, bp), player.id, 0.0)
			
			Modifier_ApplyToPlayer(Modifier_Create(MAT_WeaponType, "reload_weapon_modifier", MUT_Multiplication, false, rates.atk_time_mult, bp), player.id, 0.0)
			Modifier_ApplyToPlayer(Modifier_Create(MAT_WeaponType, "cooldown_weapon_modifier", MUT_Multiplication, false, rates.atk_time_mult, bp), player.id, 0.0)
			Modifier_ApplyToPlayer(Modifier_Create(MAT_WeaponType, "weapon_wind_up_modifier", MUT_Multiplication, false, rates.atk_time_mult, bp), player.id, 0.0)
			Modifier_ApplyToPlayer(Modifier_Create(MAT_WeaponType, "weapon_wind_down_modifier", MUT_Multiplication, false, rates.atk_time_mult, bp), player.id, 0.0)

			Modifier_ApplyToPlayer(Modifier_Create(MAT_WeaponType, "weapon_setup_modifier", MUT_Multiplication, false, rates.siege_setup, bp), player.id, 0.0)
			Modifier_ApplyToPlayer(Modifier_Create(MAT_WeaponType, "weapon_teardown_modifier", MUT_Multiplication, false, rates.siege_setup, bp), player.id, 0.0)
			
			--Modifier_ApplyToPlayer(Modifier_Create(MAT_WeaponType, "accuracy_weapon_modifier", MUT_Multiplication, false, rates.accuracy, bp), player.id, 0.0)

			Modifier_ApplyToPlayer(Modifier_Create(MAT_WeaponType, "weapon_burst_rate_of_fire_modifier", MUT_Multiplication, false, rates.burst_rate, bp), player.id, 0.0)
		end
	end
	
end

function RND_OnInit()
	Core_CallDelegateFunctions("DiplomacyEnabled", true)
	Core_CallDelegateFunctions("TributeEnabled", true)
	
	-- upgrade modifiers
	RND_ApplyUpgradeBonus(
		BP_GetUpgradesMatchingTypes({
				"military_upgrade", "economic_upgrade", "scar_tiered_upgrade", "rus_upgrade", "ottoman_upgrade", "mongol_upgrade", 
				"malian_upgrade", "japanese_upgrade", "hre_upgrade", "french_upgrade", "french_ha_01_upgrade", "english_upgrade", "chinese_ha_01_upgrade",
				"chinese_upgrade", "byzantine_upgrade", "ayyubid_cmp_upgrade", "abbasid_ha_01_upgrade", "abbasid_upgrade",
		})
	)
	
	-- map vision
	if RND_OPTIONS.mch.ma == "concealed" then 
		
	elseif RND_OPTIONS.mch.ma == "explored" then 
		FOW_ExploreAll()
	elseif RND_OPTIONS.mch.ma == "revealed" then
		FOW_ForceRevealAllUnblockedAreas()
	end
	
	-- show scores
	if RND_OPTIONS.mch.sc then
		for _, player in pairs(PLAYERS) do
			player.scarModel.show_actual_score = true
			UI_SetPlayerDataContext(player.id, player.scarModel)
		end
	end
end



RND_LOCAL_PLAYER = nil -- used for revealing on elimination
function RND_OnPlayerDefeated(player, reason)
	if player == RND_LOCAL_PLAYER then
		FOW_UIRevealAll()
	end
end

function RND_LocalPlayerChange(context)
	if context ~= nil and context.player ~= nil then
		RND_LOCAL_PLAYER = Core_GetPlayersTableEntry(context.player)
	end
end

-- Randomizes gaia
function RND_Start()
	RND_LocalPlayerChange({ player = Game_GetLocalPlayer() })
	Rule_AddGlobalEvent(RND_LocalPlayerChange, GE_LocalPlayerChanged)
	
	
	-- randomize gaia resources
	World_GetAllEntitiesOfType(EGroup_Create("RND_forage"), "forage_bush")
	World_GetAllEntitiesOfType(EGroup_Create("RND_deposits"), "resource_improvable")
	World_GetAllEntitiesOfType(EGroup_Create("RND_shore"), "shore_fish")
	World_GetAllEntitiesOfType(EGroup_Create("RND_deep"), "deep_water_fish")
	
	--World_GetAllEntitiesOfType(EGroup_Create("RND_all_animal"), "animal")
	
	local RandomizeRes = function( egroupid, itemindex, entityID )
		local rates = {
			mult = 2.5 ^ RND_Rand(-1, 1) + RND_Rand(5.0, 10.0) * RND_Chance(0.05),
		}

		local contained_deposit = Entity_GetRemainingResourceDepositAmount(entityID)
		Entity_SetRemainingResourceDepositAmount(entityID, math.floor(contained_deposit * rates.mult))
 	end
	
	-- doesnt work
	--local RandomizeResAnimal = function( egroupid, itemindex, entityID )
		--local rates = {
			--mult = 2.5 ^ RND_Rand(-1, 1) + RND_Rand(5.0, 10.0) * RND_Chance(0.05),
			--swap_resource = RND_Chance(0.1) == 1,
		--}
		
		---- get resources contained if this is an animal
		--local an_food_contained = Entity_GetResource(entityID, RT_Food)
		--local an_wood_contained = Entity_GetResource(entityID, RT_Wood)
		--local an_gold_contained = Entity_GetResource(entityID, RT_Gold)
		--local an_stone_contained = Entity_GetResource(entityID, RT_Stone)

		--local contained_animal_amount = math.max(an_food_contained, an_wood_contained, an_gold_contained, an_stone_contained)
		
		--local contained_animal_resource
		--if contained_animal_amount == an_food_contained then
		    --contained_animal_resource = RT_Food
		--elseif contained_animal_amount == an_wood_contained then
		    --contained_animal_resource = RT_Wood
		--elseif contained_animal_amount == an_gold_contained then
		    --contained_animal_resource = RT_Gold
		--elseif contained_animal_amount == an_stone_contained then
		    --contained_animal_resource = RT_Stone
		--end
		
		
		---- doesnt work
		----Modifier_ApplyToEntity(Modifier_Create(MAT_EntityType, "health_maximum_modifier", MUT_Multiplication, false, rates.mult, Entity_GetBlueprint(entityID)), entityID, 0.0)
		
		
		
		--if not rates.swap_resource then
			--Entity_SetResource(entityID, contained_animal_resource, contained_animal_amount * rates.mult)
		--else
			--local rand_val = RND_RandInt(1, 4)
			--local res = RT_FOOD
			--if rand_val == 1 then res = RT_Food elseif rand_val == 2 then res = RT_Wood elseif rand_val == 3 then res = RT_Gold else res = RT_Stone end
			
			--Entity_SetResource(entityID, contained_animal_resource, 0)
			--Entity_SetResource(entityID, res, contained_animal_amount * rates.mult)
		--end
	--end

 	EGroup_ForEach( EGroup_FromName("RND_forage"), RandomizeRes )
	EGroup_ForEach( EGroup_FromName("RND_deposits"), RandomizeRes )
	EGroup_ForEach( EGroup_FromName("RND_shore"), RandomizeRes )
	EGroup_ForEach( EGroup_FromName("RND_deep"), RandomizeRes )
end

-- Randomizes upgrades
function RND_ApplyUpgradeBonus(bps)
	for _, ubp in pairs(bps) do
		local rates = {
			cost_multiplier = {
				food = RND_Rand(0.1, 2.0) + RND_Rand(3.0, 9.0) * RND_Chance(0.05),
				wood = RND_Rand(0.1, 2.0) + RND_Rand(3.0, 9.0) * RND_Chance(0.05),
				gold = RND_Rand(0.1, 2.0) + RND_Rand(3.0, 9.0) * RND_Chance(0.05),
				stone = RND_Rand(0.1, 2.0) + RND_Rand(3.0, 9.0) * RND_Chance(0.05),
			},
			cost_additive = {
				food = math.floor(10.0 ^ RND_Rand(0.0, 3.2)) * RND_Chance(0.1),
				wood = math.floor(10.0 ^ RND_Rand(0.0, 3.2)) * RND_Chance(0.1),
				gold = math.floor(10.0 ^ RND_Rand(0.0, 3.2)) * RND_Chance(0.1),
				stone = math.floor(10.0 ^ RND_Rand(0.0, 3.2)) * RND_Chance(0.1),
			},
			production_speed_modifier = RND_Rand(RND_Rand(0.0, 0.5), 2.0) + 5 * RND_Chance(0.15)
		}
		
		for _, player in pairs(PLAYERS) do
			Modifier_ApplyToPlayer(Modifier_Create(MAT_Upgrade, "upgrade_cost_food_modifier", MUT_Multiplication, false, rates.cost_multiplier.food, ubp), player.id, 0.0)
			Modifier_ApplyToPlayer(Modifier_Create(MAT_Upgrade, "upgrade_cost_wood_modifier", MUT_Multiplication, false, rates.cost_multiplier.wood, ubp), player.id, 0.0)
			Modifier_ApplyToPlayer(Modifier_Create(MAT_Upgrade, "upgrade_cost_gold_modifier", MUT_Multiplication, false, rates.cost_multiplier.gold, ubp), player.id, 0.0)
			Modifier_ApplyToPlayer(Modifier_Create(MAT_Upgrade, "upgrade_cost_stone_modifier", MUT_Multiplication, false, rates.cost_multiplier.stone, ubp), player.id, 0.0)
			
			Modifier_ApplyToPlayer(Modifier_Create(MAT_Upgrade, "upgrade_cost_food_modifier", MUT_Addition, false, rates.cost_additive.food, ubp), player.id, 0.0)
			Modifier_ApplyToPlayer(Modifier_Create(MAT_Upgrade, "upgrade_cost_wood_modifier", MUT_Addition, false, rates.cost_additive.wood, ubp), player.id, 0.0)
			Modifier_ApplyToPlayer(Modifier_Create(MAT_Upgrade, "upgrade_cost_gold_modifier", MUT_Addition, false, rates.cost_additive.gold, ubp), player.id, 0.0)
			Modifier_ApplyToPlayer(Modifier_Create(MAT_Upgrade, "upgrade_cost_stone_modifier", MUT_Addition, false, rates.cost_additive.stone, ubp), player.id, 0.0)
			
			Modifier_ApplyToPlayer(Modifier_Create(MAT_Upgrade, "upgrade_production_speed_modifier", MUT_Multiplication, false, rates.production_speed_modifier, ubp), player.id, 0.0)
		end
	end
end

RND_MODIFIERS = { }

-- Randomizes ebps
function RND_ApplyBonus(bps)
	for _, ebp in pairs(bps) do 
		if RND_MODIFIERS[ebp.PropertyBagGroupID] == nil then
			RND_MODIFIERS[ebp.PropertyBagGroupID] = true
			
			local worker = Entity_IsEBPOfType(ebp, RND_BP_WORKER)
			local unit = Entity_IsEBPOfType(ebp, RND_BP_UNIT_CLASS)
			local tc = Entity_IsEBPOfType(ebp, RND_BP_TOWN_CENTER)
			
			local econ_building = Entity_IsEBPOfType(ebp, RND_BP_ECON_BUILDING)
			local wall = Entity_IsEBPOfType(ebp, RND_BP_WALL)
			local house = Entity_IsEBPOfType(ebp, RND_BP_HOUSE)
		
			local rates = {}

			-- Set up rates
			if worker or tc then
				rates.production_speed_modifier = 2.0 ^ RND_Rand(-0.3, 0.3)
			else
				rates.production_speed_modifier = 10.0 ^ RND_Rand(-0.7, 1.2) + 5 * RND_Chance(0.1)
			end


			rates.trade_route_resource_generation_modifier = 2.0 ^ RND_Rand(-0.6, 0.6)

			if worker then
				--rates.harvest_rate = {
					--food = 2.0 ^ RND_Rand(-1.0, 1.0),
					--wood = 2.0 ^ RND_Rand(-1.0, 1.0),
					--gold = 2.0 ^ RND_Rand(-1.0, 1.0),
					--stone = 2.0 ^ RND_Rand(-1.0, 1.0),
				--}
				--rates.carry_capacity = {
					--food = 2.0 ^ RND_Rand(-1.0, 1.0),
					--wood = 2.0 ^ RND_Rand(-1.0, 1.0),
					--gold = 2.0 ^ RND_Rand(-1.0, 1.0),
					--stone = 2.0 ^ RND_Rand(-1.0, 1.0),
				--}
				rates.construction_rate = RND_Rand(0.7, 1.5)
				rates.repair_rate_modifier = RND_Rand(0.7, 1.5)
			end
			
			if econ_building then
				rates.cost_multiplier = {
					food = RND_Rand(0.1, 2.0) + RND_Rand(2.0, 4.0) * RND_Chance(0.05),
					wood = RND_Rand(0.1, 2.0) + RND_Rand(2.0, 4.0) * RND_Chance(0.015),
					gold = RND_Rand(0.1, 2.0) + RND_Rand(2.0, 4.0) * RND_Chance(0.035),
					stone = RND_Rand(0.1, 2.0) + RND_Rand(2.0, 4.0) * RND_Chance(0.035),
					olive_oil = RND_Rand(0.1, 2.0) + RND_Rand(2.0, 4.0) * RND_Chance(0.035),
				}
			else
				rates.cost_multiplier = {
					food = RND_Rand(0.1, 2.0) + RND_Rand(3.0, 9.0) * RND_Chance(0.05),
					wood = RND_Rand(0.1, 2.0) + RND_Rand(3.0, 9.0) * RND_Chance(0.015),
					gold = RND_Rand(0.1, 2.0) + RND_Rand(3.0, 9.0) * RND_Chance(0.035),
					stone = RND_Rand(0.1, 2.0) + RND_Rand(3.0, 9.0) * RND_Chance(0.035),
					olive_oil = RND_Rand(0.1, 2.0) + RND_Rand(3.0, 9.0) * RND_Chance(0.035),
				}
			end
			
			if worker then 
				rates.cost_multiplier.food = RND_Rand(0.1, 2.0)
			end
			
			if house then
				rates.cost_multiplier.wood = RND_Rand(0.1, 2.0)
			end
				

			if not worker and not wall then
				if econ_building or house then
					rates.cost_additive = {
						food = math.floor(10.0 ^ RND_Rand(0.0, 2)) * RND_Chance(0.15),
						wood = math.floor(10.0 ^ RND_Rand(0.0, 2)) * RND_Chance(0.15),
						gold = math.floor(10.0 ^ RND_Rand(0.0, 2)) * RND_Chance(0.15),
						stone = math.floor(10.0 ^ RND_Rand(0.0, 2)) * RND_Chance(0.15),
						olive_oil = 0,
					}
				else
					rates.cost_additive = {
						food = math.floor(10.0 ^ RND_Rand(0.0, 2.5)) * RND_Chance(0.15) + math.floor(10.0 ^ RND_Rand(0.0, 3.0)) * RND_Chance(0.035),
						wood = math.floor(10.0 ^ RND_Rand(0.0, 2.5)) * RND_Chance(0.15) + math.floor(10.0 ^ RND_Rand(0.0, 3.0)) * RND_Chance(0.035),
						gold = math.floor(10.0 ^ RND_Rand(0.0, 2.5)) * RND_Chance(0.15) + math.floor(10.0 ^ RND_Rand(0.0, 3.0)) * RND_Chance(0.035),
						stone = math.floor(10.0 ^ RND_Rand(0.0, 2.5)) * RND_Chance(0.15) + math.floor(10.0 ^ RND_Rand(0.0, 3.0)) * RND_Chance(0.035),
						olive_oil = 0,
					}
				end
			end

			rates.armor_scalar = {
				melee = RND_Rand(-0.5, 0.5) * RND_Chance(0.6),
				fire = RND_Rand(-0.5, 0.5) * RND_Chance(0.6),
				ranged = RND_Rand(-0.5, 0.5) * RND_Chance(0.6),
			}

			rates.health_maximum_modifier = 10.0 ^ RND_Rand(-1.0, 1.0)
			rates.sight_radius_modifier = RND_Rand(0.1, 2.0) + RND_Rand(0.0, 2.5) * RND_Chance(0.2)

			if unit then
				if worker then
					rates.speed_maximum_modifier = 1.15 ^ RND_Rand(-2.0, 2.0)
				else
					rates.speed_maximum_modifier = 2.0 ^ RND_Rand(-2.0, 2.0)
				end
				rates.acceleration_modifier = rates.speed_maximum_modifier
			end

			-- Apply modifiers
			for _, player in pairs(PLAYERS) do
			    RND_ApplyMod(player.id, ebp, "production_speed_modifier", rates.production_speed_modifier)
			    RND_ApplyMod(player.id, ebp, "trade_route_resource_generation_modifier", rates.trade_route_resource_generation_modifier)

				if(worker) then
					--RND_ApplyMod(player.id, ebp, "resource_entity_harvest_rate_food", rates.harvest_rate.food)
					--RND_ApplyMod(player.id, ebp, "resource_entity_harvest_rate_wood", rates.harvest_rate.wood)
					--RND_ApplyMod(player.id, ebp, "resource_entity_harvest_rate_gold", rates.harvest_rate.gold)
					--RND_ApplyMod(player.id, ebp, "resource_entity_harvest_rate_stone", rates.harvest_rate.stone)
					
					--RND_ApplyMod(player.id, ebp, "resource_carry_capacity_food", rates.carry_capacity.food)
					--RND_ApplyMod(player.id, ebp, "resource_carry_capacity_wood", rates.carry_capacity.wood)
					--RND_ApplyMod(player.id, ebp, "resource_carry_capacity_gold", rates.carry_capacity.gold)
					--RND_ApplyMod(player.id, ebp, "resource_carry_capacity_stone", rates.carry_capacity.stone)
					
				    RND_ApplyMod(player.id, ebp, "construction_rate", rates.construction_rate)
			    	RND_ApplyMod(player.id, ebp, "repair_rate_modifier", rates.repair_rate_modifier)
				end	

			    RND_ApplyMod(player.id, ebp, "resource_entity_cost_food", rates.cost_multiplier.food)
			    RND_ApplyMod(player.id, ebp, "resource_entity_cost_wood", rates.cost_multiplier.wood)
			    RND_ApplyMod(player.id, ebp, "resource_entity_cost_gold", rates.cost_multiplier.gold)
			    RND_ApplyMod(player.id, ebp, "resource_entity_cost_stone", rates.cost_multiplier.stone)
			    RND_ApplyMod(player.id, ebp, "resource_entity_cost_olive_oil", rates.cost_multiplier.olive_oil)
				
				if(not worker) then
					RND_ApplyModAdditive(player.id, ebp, "resource_entity_cost_food", rates.cost_additive.food)
					RND_ApplyModAdditive(player.id, ebp, "resource_entity_cost_wood", rates.cost_additive.wood)
					RND_ApplyModAdditive(player.id, ebp, "resource_entity_cost_gold", rates.cost_additive.gold)
					RND_ApplyModAdditive(player.id, ebp, "resource_entity_cost_stone", rates.cost_additive.stone)
					--RND_ApplyModAdditive(player.id, ebp, "resource_entity_cost_olive_oil", rates.cost_additive.olive_oil)
				end
				
				RND_ApplyMod(player.id, ebp, "armor_scalar_for_melee_damage", rates.armor_scalar.melee)
				RND_ApplyMod(player.id, ebp, "armor_scalar_for_truedamage_damage", rates.armor_scalar.fire)
				RND_ApplyMod(player.id, ebp, "armor_scalar_for_ranged_damage", rates.armor_scalar.ranged)
				
				RND_ApplyMod(player.id, ebp, "health_maximum_modifier", rates.health_maximum_modifier)
				RND_ApplyMod(player.id, ebp, "sight_radius_modifier", rates.sight_radius_modifier)
				
				if(unit) then
					RND_ApplyMod(player.id, ebp, "speed_maximum_modifier", rates.speed_maximum_modifier)
					RND_ApplyMod(player.id, ebp, "acceleration_modifier", rates.acceleration_modifier)
				end
			end
		end
	end
end

-- Pop cap
function RND_PopChange(min, max)
	for _, player in pairs(PLAYERS) do		
		Modifier_ApplyToPlayer(Modifier_Create(MAT_Player, "max_personnel_cap_player_modifier", MUT_Addition, false, (max - 200), ""), player.id, 0)

		-- Mongols receive always maximum to maintain their unique bonus.
		if player.raceName == "mongol" then
			Modifier_ApplyToPlayer(Modifier_Create(MAT_Player, "personnel_cap_player_modifier", MUT_Addition, false, max - 200, ""), player.id, 0)	
		else
			Modifier_ApplyToPlayer(Modifier_Create(MAT_Player, "personnel_cap_player_modifier", MUT_Addition, false, min, ""), player.id, 0)
		end
	end
end